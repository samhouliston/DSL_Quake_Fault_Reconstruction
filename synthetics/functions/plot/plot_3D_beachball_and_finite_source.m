function hf = plot_3D_beachball_and_finite_source(...
    fm, ...
    finsrc, ...
    view_angle)

if nargin<3; view_angle = [-100 75];
end

n0 = finsrc.n0;
e0 = finsrc.e0;
d0 = finsrc.d0;



%% Plot 3D beachball and finite source 

% Prepare plot
hf  = figure(201); clf; whitebg([.5 .5 .5])
lim = get_cubic_domain_XYZ(...
    n0, ...
    e0, ...
    d0, ...
    1.5*finsrc.length);
colour = [1 0 1];

hs1 = subplot(1,2,1); hold on; grid on; box on; axis equal
hs2 = subplot(1,2,2); hold on; grid on; box on; axis equal
tmp = get(hs2); xlabel('E'); ylabel('N'); zlabel('Up');
tstring = sprintf('FM: strike=%i°, dip=%i°, rake=%i°', fm.stk, fm.dip, fm.rak);
sgtitle(tstring) 

% 3D beachball
subplot(hs1);
plot_3D_beachball(finsrc.length/2, ...
    [n0 e0 d0], ...
    fm.n1, ...
    fm.n2, ...
    fm.p1', ...
    colour)
xlabel('North'); ylabel('East'); zlabel('Down');
%get(hs1); 

% Rectangular finite source
subplot(hs2);
plot_rectangular_slippatch(finsrc, colour)

% Add FM vectors
plot_FM_vectors         (fm, n0, e0, d0)
plot_FM_vectors_auxPlane(fm, n0, e0, d0)

% Link and order both subplots 
Link = linkprop([hs1, hs2],{'CameraUpVector', ...
    'CameraPosition', ...
    'CameraTarget', ...
    'XLim', ...
    'YLim', ...
    'ZLim', ...
    'xDir', ...
    'yDir', ...
    'zDir'});

setappdata(gcf, 'StoreTheLink', Link);

%tmp = get(hs1);
%set(hs1,'yDir','normal', 'zDir','normal', ...  % used for ENU
set(hs1, ...
    'yDir','reverse', ...
    'zDir','reverse', ... % used for NEDown
    'view', view_angle, ...
     'xlim', lim.x, ...
     'ylim', lim.y, ...
     'zlim', lim.z)


    
    
%% Add the second plane to finsource
finsrc2 = get_rectangular_slippatch_from_FM(...
    finsrc.n0, ...
    finsrc.e0, ...
    finsrc.d0, ...
    fm.stk2, ...
    fm.dip2, ...
    finsrc.mag, ...
    finsrc.stressdrop);
    
subplot(hs2)
fill3( ...
    finsrc2.n5(:), ...
    finsrc2.e5(:), ...
    finsrc2.d5(:), ...
    ones(5,1), ...
    'faceColor', [.7 .7 .7], ...
    'edgeColor', 'k', ...
    'faceAlpha', .3)